{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\VICTOR\\\\Projetos JS\\\\nlw_ecoleta\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport './styles.css';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [uf, setUf] = useState('0');\n  const [cities, setCities] = useState([]);\n  const [city, setCity] = useState('0');\n  const [position, setPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedItems, setSelectedItems] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    api.get('/items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`).then(response => {\n      setCities(response.data.map(city => city.nome));\n    });\n  }, [uf]);\n  useEffect(() => {\n    if (uf === '0') {\n      return;\n    }\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setPosition([latitude, longitude]);\n    });\n  }, []);\n\n  function handleUfSelect(event) {\n    setUf(event.target.value);\n  }\n\n  function handleCitySelect(event) {\n    setCity(event.target.value);\n  }\n\n  function handleMapClick(event) {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    setPosition([lat, lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleItemClick(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const [latitude, longitude] = position;\n    const items = selectedItems;\n\n    if (city === '0') {\n      return alert('Selecione uma cidade.');\n    }\n\n    if (uf === '0') {\n      return alert('Selecione um Estado.');\n    }\n\n    if (items.length === 0) {\n      return alert('Selecione pelo menos um Ã­tem de coleta.');\n    }\n\n    const data = {\n      name,\n      email,\n      whatsapp,\n      latitude,\n      longitude,\n      uf,\n      city,\n      items\n    };\n    console.log(data);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 27\n    }\n  })), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    required: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    required: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, \"whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    required: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: position,\n    zoom: 15,\n    onclick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: uf,\n    required: true,\n    onChange: handleUfSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: city,\n    required: true,\n    onChange: handleCitySelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, \"Itens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, \"Selecione um ou mais itens de coleta\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleItemClick(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 37\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/victo/Documents/VICTOR/Projetos JS/nlw_ecoleta/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Map","TileLayer","Marker","Link","useHistory","FiArrowLeft","api","axios","CreatePoint","items","setItems","ufs","setUfs","uf","setUf","cities","setCities","city","setCity","position","setPosition","formData","setFormData","name","email","whatsapp","selectedItems","setSelectedItems","history","get","then","response","data","ufInitials","map","sigla","nome","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","handleUfSelect","event","target","value","handleCitySelect","handleMapClick","lat","lng","latlng","handleInputChange","handleItemClick","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","alert","length","console","log","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport './styles.css';\r\nimport api from '../../services/api';\r\nimport axios from 'axios';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item {\r\n    id: number;\r\n    title: string;\r\n    image_url: string;\r\n}\r\n\r\ninterface IBGEUfs {\r\n    sigla: string;\r\n}\r\n\r\ninterface IBGECities {\r\n    nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [ufs, setUfs] = useState<string[]>([]);\r\n    const [uf, setUf] = useState<string>('0');\r\n    const [cities, setCities] = useState<string[]>([]);\r\n    const [city, setCity] = useState<string>('0');\r\n    const [position, setPosition] = useState<[number, number]>([0, 0]);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: ''\r\n    });\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        api.get('/items').then(response => {\r\n            setItems(response.data);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGEUfs[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n            const ufInitials = response.data.map(uf => uf.sigla);\r\n            setUfs(ufInitials);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGECities[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`).then(response => {\r\n            setCities(response.data.map(city => city.nome));\r\n        })\r\n    }, [uf]);\r\n\r\n    useEffect(() => {\r\n        if(uf === '0'){\r\n            return;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const {latitude, longitude} = position.coords;\r\n            setPosition([latitude, longitude]);\r\n        });\r\n    }, [])\r\n\r\n    function handleUfSelect(event: ChangeEvent<HTMLSelectElement>){\r\n        setUf(event.target.value);\r\n    }\r\n    \r\n    function handleCitySelect(event: ChangeEvent<HTMLSelectElement>){\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent) {\r\n        const {lat, lng} = event.latlng;\r\n        setPosition([lat, lng]);\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target;\r\n        setFormData( { ...formData, [name]: value });\r\n    }\r\n\r\n    function handleItemClick(id: number) {\r\n        const alreadySelected = selectedItems.findIndex(item => item === id);\r\n        if(alreadySelected >= 0){\r\n            const filteredItems = selectedItems.filter(item => item !== id);\r\n            setSelectedItems(filteredItems);\r\n\r\n        }else {\r\n            setSelectedItems([ ...selectedItems, id ]);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const { name, email, whatsapp } = formData;\r\n        const [ latitude, longitude ] = position;\r\n        const items = selectedItems;\r\n\r\n        if(city === '0'){\r\n            return alert('Selecione uma cidade.')\r\n        }\r\n        \r\n        if(uf === '0'){\r\n            return alert('Selecione um Estado.')\r\n        }\r\n        \r\n        if(items.length === 0) {\r\n            return alert('Selecione pelo menos um Ã­tem de coleta.')\r\n        }\r\n        \r\n        const data = {\r\n            name,\r\n            email,\r\n            whatsapp,\r\n            latitude,\r\n            longitude,\r\n            uf,\r\n            city,\r\n            items\r\n        };\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\"/>\r\n                <Link to=\"/\">\r\n                    <span><FiArrowLeft /></span>\r\n                    Voltar para home</Link>\r\n            </header>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Cadastro do <br/> ponto de coleta</h1>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Dados</h2>\r\n                    </legend>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input \r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                required\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"whatsapp\">whatsapp</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"whatsapp\"\r\n                                id=\"whatsapp\"\r\n                                required\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>EndereÃ§o</h2>\r\n                        <span>Selecione o endereÃ§o no mapa</span>\r\n                    </legend>\r\n\r\n                    <Map center={position} zoom={15} onclick={handleMapClick}>\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n\r\n                        <Marker position={position} />\r\n                    </Map>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n                            <select name=\"uf\" id=\"uf\" value={uf} required onChange={handleUfSelect}>\r\n                                <option value=\"0\">Selecione uma UF</option>\r\n                                {ufs.map(uf => (\r\n                                    <option key={uf} value={uf}>{uf}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"city\">Cidade</label>\r\n                            <select name=\"city\" id=\"city\" value={city} required onChange={handleCitySelect}>\r\n                                <option value=\"0\">Selecione uma cidade</option>\r\n                                {cities.map(city => (\r\n                                    <option key={city} value={city}>{city}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Itens de coleta</h2>\r\n                        <span>Selecione um ou mais itens de coleta</span>\r\n                    </legend>\r\n\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                                <li key={item.id} \r\n                                    onClick={() => handleItemClick(item.id)}\r\n                                    className={selectedItems.includes(item.id) ? 'selected' : ''}\r\n                                >\r\n                                    <img src={item.image_url} alt={item.title} />\r\n                                    <span>{item.title}</span>\r\n                                </li>\r\n                            )\r\n                        )}\r\n                        \r\n                    </ul>\r\n                </fieldset>\r\n\r\n                <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}